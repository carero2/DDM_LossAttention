setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
models <- read.csv2(models_csv)
models$model <- paste0("model", models$model)
final_aggregated <- merge(aggregated_models, models)
if (length(unique(df$participant)) ==  sum(aggregated_models$n_participants)){
model <- aggregated_models[aggregated_models$n_participants == max(aggregated_models$n_participants), "model"]
print(paste0("It seems that the best model is ", model,
" because ", max(aggregated_models$n_participants),
" out of ", sum(aggregated_models$n_participants), " participants had a lower BIC with that model."))
}
return(final_aggregated)
}
# Return to source file location and go to specified path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd("Study 2")
results_Study2 <- read_analyzed_models()
best_models_Study2 <- get_best_models(results_Study2, models_csv="models_Study2.csv")
read_analyzed_models <- function(study_folder="Study 2"){
# Return to source file location and go to specified path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(study_folder)
models <- list.files(path = "./", pattern = "*.log")
n_participants <- length(list.files(path = "./", pattern = "*.txt"))
df_models <- NULL
models_less_participants <- c()
for (model in models) {
df_model <- read_log(model, col_names = TRUE, show_col_types=FALSE)
names(df_model)[1] <- "participant"
# Initiate the new column
df_model$n_trials <- 0
# Replace the 0 for the number of trials per participant
for (participant in df_model$participant) {
n_trials_participant <- countLines(paste0(participant, ".txt"))
df_model[df_model$participant == participant, "n_trials"] <- n_trials_participant
}
# If the ML method is chosen the presented fit index is -LL (Voss, Voss and Lerche, 2015)
df_model$BIC <- 2*df_model$fit + (ncol(df_model) - 6) * log(df_model$n_trials)
model_str <- str_extract(model, '.*(?=\\.log)')
df_model$model_variant <- model_str
if (nrow(df_model) < n_participants) {
models_less_participants <- append(models_less_participants, model_str)
}
df_models <- bind_rows(df_models, df_model)
}
if (length(models_less_participants == 0)){
cat("Less participants than expected in models ", models_less_participants, "\n", sep="\t")
print(paste0(n_participants, " participants expected. ", nrow(df_model), " participants included."))
}
return(df_models)
}
get_best_models <- function(df, models_csv){
print(paste0("Table has results from ",
length(unique(df$participant)), " participants and ",
length(unique(df$model_variant)), " models."))
for (participant in unique(df$participant)) {
best_bic <- min(df[df$participant == participant, "BIC"])
df[df$participant == participant, "model"] <- df[(df$participant == participant) & (df$BIC == best_bic), "model_variant"]
}
aggregated_best_models <- df %>%
group_by(model) %>%
summarize(n_participants = n()/9)
aggregated_models <- df %>% select(-c(model)) %>%
rename(model = model_variant) %>%
group_by(model) %>%
summarize(n = n(),
mean_fit = mean(fit),
mean_BIC = mean(BIC),
median_BIC = median(BIC))
aggregated_models <- merge(aggregated_models, aggregated_best_models)
models <- read.csv2(models_csv)
models$model <- paste0("model", models$model)
final_aggregated <- merge(aggregated_models, models)
if (length(unique(df$participant)) ==  sum(aggregated_models$n_participants)){
model <- aggregated_models[aggregated_models$n_participants == max(aggregated_models$n_participants), "model"]
print(paste0("It seems that the best model is ", model,
" because ", max(aggregated_models$n_participants),
" out of ", sum(aggregated_models$n_participants), " participants had a lower BIC with that model."))
}
# Return to source file location and go to specified path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
return(final_aggregated)
}
results_Study2 <- read_analyzed_models(study_folder = "Study 2")
best_models_Study2 <- get_best_models(results_Study2, models_csv="models_Study2.csv")
View(best_models_Study2)
get_best_models <- function(df, models_csv){
print(paste0("Table has results from ",
length(unique(df$participant)), " participants and ",
length(unique(df$model_variant)), " models."))
for (participant in unique(df$participant)) {
best_bic <- min(df[df$participant == participant, "BIC"])
df[df$participant == participant, "model"] <- df[(df$participant == participant) & (df$BIC == best_bic), "model_variant"]
}
aggregated_best_models <- df %>%
group_by(model) %>%
summarize(n_participants = n()/unique(df$model_variant))
aggregated_models <- df %>% select(-c(model)) %>%
rename(model = model_variant) %>%
group_by(model) %>%
summarize(n = n(),
mean_fit = mean(fit),
mean_BIC = mean(BIC),
median_BIC = median(BIC))
aggregated_models <- merge(aggregated_models, aggregated_best_models)
models <- read.csv2(models_csv)
models$model <- paste0("model", models$model)
final_aggregated <- merge(aggregated_models, models)
if (length(unique(df$participant)) ==  sum(aggregated_models$n_participants)){
model <- aggregated_models[aggregated_models$n_participants == max(aggregated_models$n_participants), "model"]
print(paste0("It seems that the best model is ", model,
" because ", max(aggregated_models$n_participants),
" out of ", sum(aggregated_models$n_participants), " participants had a lower BIC with that model."))
}
# Return to source file location and go to specified path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
return(final_aggregated)
}
best_models_Study2 <- get_best_models(results_Study2, models_csv="models_Study2.csv")
get_best_models <- function(df, models_csv){
n_models <- unique(df$model_variant)
print(paste0("Table has results from ",
length(unique(df$participant)), " participants and ",
length(n_models), " models."))
for (participant in unique(df$participant)) {
best_bic <- min(df[df$participant == participant, "BIC"])
df[df$participant == participant, "model"] <- df[(df$participant == participant) & (df$BIC == best_bic), "model_variant"]
}
aggregated_best_models <- df %>%
group_by(model) %>%
summarize(n_participants = n()/n_models)
aggregated_models <- df %>% select(-c(model)) %>%
rename(model = model_variant) %>%
group_by(model) %>%
summarize(n = n(),
mean_fit = mean(fit),
mean_BIC = mean(BIC),
median_BIC = median(BIC))
aggregated_models <- merge(aggregated_models, aggregated_best_models)
models <- read.csv2(models_csv)
models$model <- paste0("model", models$model)
final_aggregated <- merge(aggregated_models, models)
if (length(unique(df$participant)) ==  sum(aggregated_models$n_participants)){
model <- aggregated_models[aggregated_models$n_participants == max(aggregated_models$n_participants), "model"]
print(paste0("It seems that the best model is ", model,
" because ", max(aggregated_models$n_participants),
" out of ", sum(aggregated_models$n_participants), " participants had a lower BIC with that model."))
}
# Return to source file location and go to specified path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
return(final_aggregated)
}
best_models_Study2 <- get_best_models(results_Study2, models_csv="models_Study2.csv")
get_best_models <- function(df, models_csv){
n_models <-  length(unique(df$model_variant))
print(paste0("Table has results from ",
length(unique(df$participant)), " participants and ",
n_models, " models."))
for (participant in unique(df$participant)) {
best_bic <- min(df[df$participant == participant, "BIC"])
df[df$participant == participant, "model"] <- df[(df$participant == participant) & (df$BIC == best_bic), "model_variant"]
}
aggregated_best_models <- df %>%
group_by(model) %>%
summarize(n_participants = n()/n_models)
aggregated_models <- df %>% select(-c(model)) %>%
rename(model = model_variant) %>%
group_by(model) %>%
summarize(n = n(),
mean_fit = mean(fit),
mean_BIC = mean(BIC),
median_BIC = median(BIC))
aggregated_models <- merge(aggregated_models, aggregated_best_models)
models <- read.csv2(models_csv)
models$model <- paste0("model", models$model)
final_aggregated <- merge(aggregated_models, models)
if (length(unique(df$participant)) ==  sum(aggregated_models$n_participants)){
model <- aggregated_models[aggregated_models$n_participants == max(aggregated_models$n_participants), "model"]
print(paste0("It seems that the best model is ", model,
" because ", max(aggregated_models$n_participants),
" out of ", sum(aggregated_models$n_participants), " participants had a lower BIC with that model."))
}
# Return to source file location and go to specified path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
return(final_aggregated)
}
best_models_Study2 <- get_best_models(results_Study2, models_csv="models_Study2.csv")
results_Study2 <- read_analyzed_models(study_folder = "Study 2")
best_models_Study2 <- get_best_models(results_Study2, models_csv="models_Study2.csv")
View(best_models_Study2)
write.csv(best_models_Study2, "results_moldes_Study2.csv", row.names=FALSE)
results_Study3_pure <- read_analyzed_models(study_path="Study 3/pure_domains")
results_Study3_pure <- read_analyzed_models(study_folder="Study 3/pure_domains")
best_models_Study3_pure <- get_best_models(results_Study3_pure, models_csv="models_Study3.csv")
best_models_Study3_pure <- get_best_models(results_Study3_pure, models_csv="models_Study3.csv")
View(best_models_Study3_pure)
write.csv(best_models_Study3_pure, "results_moldes_Study3_pure.csv", row.names=FALSE)
results_Study3_mixed <- read_analyzed_models(study_path="Study 3/mixed_domains")
results_Study3_mixed <- read_analyzed_models(study_folder="Study 3/mixed_domains")
best_models_Study3_mixed <- get_best_models(results_Study3_mixed, models_csv="models_Study3.csv")
write.csv(results_Study3_mixed, "results_moldes_Study3_mixed.csv", row.names=FALSE)
View(best_models_Study3_mixed)
library(ggplot2)
plot_results_model <- function(df, model, parameters){
# creating the modified dataframe
data_mod <- df[df$model_variant == model, parameters] %>% pivot_longer(everything())
# creating a plot
ggplot(data_mod) +
geom_boxplot(aes(x=name, y=value, color=name)) +
labs(x="Parameter value", title=paste0("Boxplot for parameters from ", model))
}
plot_results_model(results_Study3_pure, "model5", c('v_pure_mixed', 'v_pure_gain', 'v_pure_loss'))
library("tidyr")
plot_results_model(results_Study3_pure, "model5", c('v_pure_mixed', 'v_pure_gain', 'v_pure_loss'))
plot_results_model <- function(df, model, parameters){
# creating the modified dataframe
data_mod <- df[df$model_variant == model, parameters] %>% pivot_longer(everything())
# creating a plot
ggplot(data_mod) +
geom_boxplot(aes(x=name, y=value, color=name)) +
labs(x="Parameter value", title=paste0("Boxplot for parameters from ", model))
}
plot_results_model(results_Study3_pure, "model5", c('v_pure_mixed', 'v_pure_gain', 'v_pure_loss'))
View(results_Study2)
plot_results_model(results_Study2, model="model11", parameters=c('v_2', 'v_4', 'v_6'))
View(results_Study2)
plot_results_model(results_Study2, model="model15", parameters=c('t0_gain', 't0_loss', 't0_mixed'))
plot_results_model(results_Study3_pure, model="model5", parameters=c('v_pure_mixed', 'v_pure_gain', 'v_pure_loss'))
plot_results_model(results_Study3_pure, model="model5", parameters=c('t0_pure_mixed', 't0_pure_gain', 't0_pure_loss'))
plot_results_model(results_Study3_mixed, model="model5", parameters=c('t0_mixed_gain', 't0_mixed_loss'))
plot_results_model(results_Study3_mixed, model="model6", parameters=c('t0_mixed_gain', 't0_mixed_loss'))
plot_results_model(results_Study3_mixed, model="model6", parameters=c('v_mixed_gain', 'v_mixed_loss'))
View(results_Study2)
View(best_models_Study2)
results_Study2[results_Study2$model_variant == "model11"]
results_Study2[results_Study2$model_variant == "model11",]
results_Study2[results_Study2$model_variant == "model11", colSums(is.na(df))<2]
results_Study2[results_Study2$model_variant == "model11", colSums(is.na(results_Study2))<2]
prueba <- results_Study2[results_Study2$model_variant == "model11", ]
prueba[, colSums(is.na(prueba))<2]
prueba <- prueba[, colSums(is.na(prueba))<2]
View(prueba)
aggregated_models <- results_Study2 %>%
group_by(model_variant) %>%
summarise_all(mean)
aggregated_models <- results_Study2 %>%
group_by(model_variant) %>%
summarise(across(everything(), list(mean)))
View(aggregated_models)
results_Study2 %>%
group_by(model_variant) %>%
summarise(across(everything(), list(mean)))
results_Study2 %>%
group_by(model_variant) %>%
summarise(across(everything(), mean, na.rm=TRUE))
aggregated_models <- results_Study2 %>%
group_by(model_variant) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
View(aggregated_models)
View(results_Study2)
aggregated_models <- results_Study2 %>%
group_by(model_variant) %>%
summarise_at(vars(1:-1), mean, na.rm = TRUE)
View(results_Study2)
View(results_Study3_mixed)
View(results_Study3_pure)
aggregated_models <- results_Study2 %>%
group_by(model_variant) %>%
summarise_at(vars(a:), mean, na.rm = TRUE)
col_names
col_names(results_Study2)
colnames(results_Study2)
View(aggregated_models)
setdiff(colnames(results_Study2), "participant", "n_trials")
setdiff(colnames(results_Study2), c("participant", "n_trials"))
aggregated_models <- results_Study2 %>%
group_by(model_variant) %>%
summarise_at(setdiff(colnames(results_Study2), c("participant", "n_trials")), mean, na.rm = TRUE)
View(results_Study2)
aggregated_models <- results_Study2 %>%
group_by(model_variant) %>%
summarise_at(setdiff(colnames(results_Study2), c("participant", "n_trials", "model_variant")), mean, na.rm = TRUE)
aggregated_models <- results_Study2 %>%
group_by(model_variant) %>%
summarise_at(setdiff(colnames(results_Study2), c("participant", "n_trials", "model_variant", "method")), mean, na.rm = TRUE)
aggregated_models <- results_Study2 %>%
group_by(model_variant) %>%
summarize(n_participants = n()) %>%
summarise_at(-group_cols(c("participant", "n_trials", "model_variant", "method")), mean, na.rm = TRUE)
aggregated_models <- results_Study2 %>%
group_by(model_variant) %>%
select(-method) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
View(aggregated_models)
aggregated_models <- results_Study2 %>%
group_by(model_variant) %>%
select(-method, -participant) %>%
summarise(n_participants = n()) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
View(aggregated_models)
aggregated_models <- results_Study2 %>%
group_by(model_variant) %>%
select(-method, -participant) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)%>%
summarise(n_participants = n())
View(aggregated_models)
aggregated_models <- results_Study2 %>%
group_by(model_variant) %>%
select(-method, -participant) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
View(aggregated_models)
aggregated_models <- results_Study2 %>%
group_by(model_variant) %>%
select(-method, -participant, -n_trials) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
aggregated_models <- results_Study2 %>%
group_by(model_variant) %>%
summarise(n_participants = n())
View(aggregated_models)
View(best_models_Study2)
aggregated_models <- results_Study2 %>%
select(model_variant %in% best_models_Study2$model)
best_models_Study2$model
aggregated_models <- results_Study2[results_Study2$model_variant %in% best_models_Study2$mode] %>%
group_by(model_variant) %>%
select(-method, -participant, -n_trials) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
aggregated_models <- results_Study2[results_Study2$model_variant %in% best_models_Study2$model,] %>%
group_by(model_variant) %>%
select(-method, -participant, -n_trials) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
View(aggregated_models)
read_analyzed_models <- function(study_folder="Study 2"){
# Return to source file location and go to specified path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(study_folder)
models <- list.files(path = "./", pattern = "*.log")
n_participants <- length(list.files(path = "./", pattern = "*.txt"))
df_models <- NULL
models_less_participants <- c()
for (model in models) {
df_model <- read_log(model, col_names = TRUE, show_col_types=FALSE)
names(df_model)[1] <- "participant"
# Initiate the new column
df_model$n_trials <- 0
# Replace the 0 for the number of trials per participant
for (participant in df_model$participant) {
n_trials_participant <- countLines(paste0(participant, ".txt"))
df_model[df_model$participant == participant, "n_trials"] <- n_trials_participant
}
# If the ML method is chosen the presented fit index is -LL (Voss, Voss and Lerche, 2015)
df_model$BIC <- 2*df_model$fit + (ncol(df_model) - 6) * log(df_model$n_trials)
model_str <- str_extract(model, '.*(?=\\.log)')
df_model$model_variant <- model_str
if (nrow(df_model) < n_participants) {
models_less_participants <- append(models_less_participants, model_str)
}
df_models <- bind_rows(df_models, df_model)
}
if (length(models_less_participants == 0)){
cat("Less participants than expected in models ", models_less_participants, "\n", sep="\t")
print(paste0(n_participants, " participants expected. ", nrow(df_model), " participants included."))
}
return(df_models)
}
get_best_models <- function(df, models_csv){
n_models <-  length(unique(df$model_variant))
print(paste0("Table has results from ",
length(unique(df$participant)), " participants and ",
n_models, " models."))
for (participant in unique(df$participant)) {
best_bic <- min(df[df$participant == participant, "BIC"])
df[df$participant == participant, "model"] <- df[(df$participant == participant) & (df$BIC == best_bic), "model_variant"]
}
aggregated_best_models <- df %>%
group_by(model) %>%
summarize(n_participants = n()/n_models)
aggregated_models <- df %>% select(-c(model)) %>%
rename(model = model_variant) %>%
group_by(model) %>%
summarize(n = n(),
mean_fit = mean(fit),
mean_BIC = mean(BIC),
median_BIC = median(BIC))
aggregated_models <- merge(aggregated_models, aggregated_best_models)
models <- read.csv2(models_csv)
models$model <- paste0("model", models$model)
final_aggregated <- merge(aggregated_models, models)
if (length(unique(df$participant)) ==  sum(aggregated_models$n_participants)){
model <- aggregated_models[aggregated_models$n_participants == max(aggregated_models$n_participants), "model"]
print(paste0("It seems that the best model is ", model,
" because ", max(aggregated_models$n_participants),
" out of ", sum(aggregated_models$n_participants), " participants had a lower BIC with that model."))
}
# Return to source file location and go to specified path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
return(final_aggregated)
}
get_mean_parameters <- function(results, best_models){
summary_models <- results[results$model_variant %in% best_models$model,] %>%
group_by(model_variant) %>%
select(-method, -participant, -n_trials) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
return(summary_models)
}
results_Study2 <- read_analyzed_models(study_folder = "Study 2")
best_models_Study2 <- get_best_models(results_Study2, models_csv="models_Study2.csv")
library("readr")
library("stringr")
library("dplyr")
library("R.utils")
read_analyzed_models <- function(study_folder="Study 2"){
# Return to source file location and go to specified path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(study_folder)
models <- list.files(path = "./", pattern = "*.log")
n_participants <- length(list.files(path = "./", pattern = "*.txt"))
df_models <- NULL
models_less_participants <- c()
for (model in models) {
df_model <- read_log(model, col_names = TRUE, show_col_types=FALSE)
names(df_model)[1] <- "participant"
# Initiate the new column
df_model$n_trials <- 0
# Replace the 0 for the number of trials per participant
for (participant in df_model$participant) {
n_trials_participant <- countLines(paste0(participant, ".txt"))
df_model[df_model$participant == participant, "n_trials"] <- n_trials_participant
}
# If the ML method is chosen the presented fit index is -LL (Voss, Voss and Lerche, 2015)
df_model$BIC <- 2*df_model$fit + (ncol(df_model) - 6) * log(df_model$n_trials)
model_str <- str_extract(model, '.*(?=\\.log)')
df_model$model_variant <- model_str
if (nrow(df_model) < n_participants) {
models_less_participants <- append(models_less_participants, model_str)
}
df_models <- bind_rows(df_models, df_model)
}
if (length(models_less_participants == 0)){
cat("Less participants than expected in models ", models_less_participants, "\n", sep="\t")
print(paste0(n_participants, " participants expected. ", nrow(df_model), " participants included."))
}
return(df_models)
}
get_best_models <- function(df, models_csv){
n_models <-  length(unique(df$model_variant))
print(paste0("Table has results from ",
length(unique(df$participant)), " participants and ",
n_models, " models."))
for (participant in unique(df$participant)) {
best_bic <- min(df[df$participant == participant, "BIC"])
df[df$participant == participant, "model"] <- df[(df$participant == participant) & (df$BIC == best_bic), "model_variant"]
}
aggregated_best_models <- df %>%
group_by(model) %>%
summarize(n_participants = n()/n_models)
aggregated_models <- df %>% select(-c(model)) %>%
rename(model = model_variant) %>%
group_by(model) %>%
summarize(n = n(),
mean_fit = mean(fit),
mean_BIC = mean(BIC),
median_BIC = median(BIC))
aggregated_models <- merge(aggregated_models, aggregated_best_models)
models <- read.csv2(models_csv)
models$model <- paste0("model", models$model)
final_aggregated <- merge(aggregated_models, models)
if (length(unique(df$participant)) ==  sum(aggregated_models$n_participants)){
model <- aggregated_models[aggregated_models$n_participants == max(aggregated_models$n_participants), "model"]
print(paste0("It seems that the best model is ", model,
" because ", max(aggregated_models$n_participants),
" out of ", sum(aggregated_models$n_participants), " participants had a lower BIC with that model."))
}
# Return to source file location and go to specified path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
return(final_aggregated)
}
get_mean_parameters <- function(results, best_models){
summary_models <- results[results$model_variant %in% best_models$model,] %>%
group_by(model_variant) %>%
select(-method, -participant, -n_trials) %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
return(summary_models)
}
results_Study2 <- read_analyzed_models(study_folder = "Study 2")
best_models_Study2 <- get_best_models(results_Study2, models_csv="models_Study2.csv")
final_parameters_Study2 <- get_mean_parameters(results_Study2, best_models_Study2)
View(final_parameters_Study2)
write.csv(best_models_Study2, "results_moldes_Study2.csv", row.names=FALSE)
write.csv(final_parameters_Study2, "parameters_moldes_Study2.csv", row.names=FALSE)
results_Study3_pure <- read_analyzed_models(study_folder="Study 3/pure_domains")
best_models_Study3_pure <- get_best_models(results_Study3_pure, models_csv="models_Study3.csv")
final_parameters_Study3_pure <- get_mean_parameters(results_Study3_pure, best_models_Study3_pure)
write.csv(best_models_Study3_pure, "results_moldes_Study3_pure.csv", row.names=FALSE)
write.csv(final_parameters_Study3_pure, "parameters_models_Study3_pure.csv", row.names=FALSE)
results_Study3_mixed <- read_analyzed_models(study_folder="Study 3/mixed_domains")
best_models_Study3_mixed <- get_best_models(results_Study3_mixed, models_csv="models_Study3.csv")
final_parameters_Study3_mixed <- get_mean_parameters(results_Study3_mixed, best_models_Study3_mixed)
write.csv(results_Study3_mixed, "results_moldes_Study3_mixed.csv", row.names=FALSE)
write.csv(final_parameters_Study3_mixed, "parameters_models_Study3_mixed.csv", row.names=FALSE)
# Lets save
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd('Study 2')
write.csv(best_models_Study2, "results_moldes_Study2.csv", row.names=FALSE)
write.csv(final_parameters_Study2, "parameters_models_Study2.csv", row.names=FALSE)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd('Study 3/pure_domains')
write.csv(best_models_Study3_pure, "results_moldes_Study3_pure.csv", row.names=FALSE)
write.csv(final_parameters_Study3_pure, "parameters_models_Study3_pure.csv", row.names=FALSE)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd('Study 3/mixed_domains')
write.csv(results_Study3_mixed, "results_moldes_Study3_mixed.csv", row.names=FALSE)
write.csv(final_parameters_Study3_mixed, "parameters_models_Study3_mixed.csv", row.names=FALSE)
